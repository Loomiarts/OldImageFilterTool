name: deploy-release
on:
  push:
    tags:
      - '*.*.*'
  
env:
  GODOT_VERSION: 3.4.4
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
      - name: Create
        run: |
          curl i -u marciodrosa:${CI_TOKEN} -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/loomiarts/OldImageFilterTool/releases -d '{"tag_name":"${GITHUB_REF_NAME}","target_commitish":"master","name":${GITHUB_REF_NAME}","body":"${GITHUB_REF_NAME}","draft":false,"prerelease":false,"generate_release_notes":false}'

  export-windows:
    name: Windows Export
    needs: create-release
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p Deploy/Windows
          godot -v --export "Windows Desktop" Deploy/Windows/OldImageFilterTool.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: OldImageFilterToolWindows$GITHUB_REF_NAME
          path: Deploy/Windows
      - name: Upload Release
        run: |
          apk add curl
          curl i -u marciodrosa:${CI_TOKEN} -X PATCH -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/loomiarts/OldImageFilterTool/releases/assets/1 -d '{"name":"Deploy/Windows/OldImageFilterToolWindows${GITHUB_REF_NAME}.zip","label":"Mac binary"}'
  
  export-mac:
    name: Mac Export
    needs: create-release
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p Deploy/Mac
          godot -v --export "Mac OSX" Deploy/Mac/OldImageFilterTool.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: OldImageFilterToolMac$GITHUB_REF_NAME
          path: Deploy/Mac

  export-web:
    name: Web Export
    needs: create-release
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p Deploy/Web
          godot -v --export "HTML5" Deploy/Web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: OldImageFilterToolWeb$GITHUB_REF_NAME
          path: Deploy/Web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: Deploy/Web # The folder the action should deploy.
